unit Produtos;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.ExtCtrls, Vcl.Buttons,
  Vcl.Grids, Vcl.DBGrids, Vcl.StdCtrls, Vcl.Mask, Vcl.ExtDlgs;

type
  TFrmProdutos = class(TForm)
    Label2: TLabel;
    EdtNome: TEdit;
    Label3: TLabel;
    edtDescricao: TEdit;
    DBGrid1: TDBGrid;
    btnNovo: TSpeedButton;
    btnSalvar: TSpeedButton;
    BtnEditar: TSpeedButton;
    BtnExcluir: TSpeedButton;
    Label4: TLabel;
    imgCod: TImage;
    imagem: TImage;
    btnAdd: TSpeedButton;
    Panel1: TPanel;
    btnImprimir: TSpeedButton;
    edtCodigo: TMaskEdit;
    Panel2: TPanel;
    btnGerarCod: TSpeedButton;
    EdtBuscarNome: TEdit;
    rbCPF: TRadioButton;
    rbNome: TRadioButton;
    Label1: TLabel;
    EdtBuscarCodigo: TMaskEdit;
    dialog: TOpenPictureDialog;
    SpeedButton1: TSpeedButton;
    LB1: TLabel;
    edtCusto: TEdit;
    LB2: TLabel;
    edtLucro: TMaskEdit;
    edtQuantidade: TEdit;
    LB3: TLabel;
    edtValor: TEdit;
    Label5: TLabel;
    Label9: TLabel;
    RadioButton1: TRadioButton;
    RadioButton2: TRadioButton;
    edtEstoque: TEdit;
    Label6: TLabel;
    edtEstoqueMin: TEdit;
    Label7: TLabel;
    procedure FormShow(Sender: TObject);
    procedure btnNovoClick(Sender: TObject);
    procedure btnSalvarClick(Sender: TObject);
    procedure btnImprimirClick(Sender: TObject);
    procedure DBGrid1CellClick(Column: TColumn);
    procedure btnGerarCodClick(Sender: TObject);
    procedure BtnEditarClick(Sender: TObject);
    procedure BtnExcluirClick(Sender: TObject);
    procedure rbNomeClick(Sender: TObject);
    procedure rbCPFClick(Sender: TObject);
    procedure EdtBuscarNomeChange(Sender: TObject);
    procedure EdtBuscarCodigoChange(Sender: TObject);
    procedure btnAddClick(Sender: TObject);
    procedure edtCodigoChange(Sender: TObject);
    procedure DBGrid1DblClick(Sender: TObject);
    procedure edtCustoChange(Sender: TObject);
    procedure edtLucroChange(Sender: TObject);
    procedure edtQuantidadeChange(Sender: TObject);
    procedure edtValorChange(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure RadioButton1Click(Sender: TObject);
    procedure RadioButton2Click(Sender: TObject);

  private
    { Private declarations }
     procedure limpar;
      procedure habilitarCampos;
      procedure desabilitarCampos;

      procedure associarCampos;
      procedure listar;

       procedure buscarNome;
      procedure buscarCodigo;

      procedure salvarFoto;
      procedure carregarImgPadrao;

      
    
      procedure GerarCodigo(codigo: string; Canvas: TCanvas);

  public
    { Public declarations }
  end;

var
  FrmProdutos: TFrmProdutos;
  id : string;
  img : TPicture;
  caminhoImg : string;
  alterou : boolean;
  resultado : double;
  custo : double;
  quantidade : double;
  lucro : double;
  zerado : double;
  valor : double;
  conversão : double;


  //
  editCusto : real;
  editLucro : real;


implementation

{$R *.dfm}

uses Modulo, ImprimirBarras;

{ TFrmProdutos }

procedure TFrmProdutos.associarCampos;
begin
   dm.tb_produtos.FieldByName('nome').Value := edtNome.Text;
   dm.tb_produtos.FieldByName('descricao').Value := edtDescricao.Text;
   dm.tb_produtos.FieldByName('codigo').Value := edtCodigo.Text;
    dm.tb_produtos.FieldByName('estoque').Value := edtestoque.text;
    dm.tb_produtos.FieldByName('estoque_min').Value := edtEstoqueMin.Text;
   if radioButton2.Checked = true then
   begin
   EdtCusto.Text := '0';
   EdtLucro.Text := '0';
   EdtQuantidade.Text := '0';
   dm.tb_produtos.FieldByName('valor').Value := edtValor.Text;
    dm.tb_produtos.FieldByName('custo').Value := EdtCusto.Text;
   dm.tb_produtos.FieldByName('margem_lucro').Value := EdtLucro.Text;
   dm.tb_produtos.FieldByName('quantidade').Value := EdtQuantidade.Text;
   end
    else
       begin
         dm.tb_produtos.FieldByName('valor').Value := edtValor.Text;
          dm.tb_produtos.FieldByName('custo').Value := EdtCusto.Text;
         dm.tb_produtos.FieldByName('margem_lucro').Value := EdtLucro.Text;
         dm.tb_produtos.FieldByName('quantidade').Value := EdtQuantidade.Text;
       end;


   dm.tb_produtos.FieldByName('data').Value := DateToStr(Date);
end;

procedure TFrmProdutos.btnAddClick(Sender: TObject);
begin
dialog.Execute();
imagem.Picture.LoadFromFile(dialog.FileName);
alterou := true;
end;

procedure TFrmProdutos.BtnEditarClick(Sender: TObject);
var
valordecimal : double;
begin
if Trim(EdtNome.Text) = '' then
       begin
           MessageDlg('Preencha o Nome!', mtInformation, mbOKCancel, 0);
           EdtNome.SetFocus;
           exit;
       end;

      if MessageDlg('Deseja editar esse registro?', mtConfirmation, mbYesNo, 0) = mrYes then
    begin
      // associarCampos;
       dm.query_produtos.Close;
       dm.query_produtos.SQL.Clear;

       if alterou then
       begin
        dm.query_produtos.SQL.Add('UPDATE produtos set codigo = :codigo, nome = :nome, descricao = :descricao,  valor = :valor, imagem = :imagem where id = :id');
        img := TPicture.Create;
        img.LoadFromFile(dialog.Filename);
        dm.query_produtos.ParamByName('imagem').Assign(img);
        img.Free;
        alterou := false;
        end
        else
        begin

         if edtValor.Enabled = false then
          begin
           dm.query_produtos.SQL.Add('UPDATE produtos set codigo = :codigo, nome = :nome, descricao = :descricao, estoque = :est, estoque_min = :emin,  custo = :custo, margem_lucro = :lucro, quantidade = :quantidade,  valor = :valor where id = :id');

              editcusto := strToFLoat(edtCusto.Text);
             editLucro := strToFloat(edtLucro.Text);
           dm.query_produtos.ParamByName('valor').Value := valor;
                dm.query_produtos.ParamByName('est').Value := edtEstoque.text;
                dm.query_produtos.ParamByName('emin').Value := edtEstoqueMin.Text;
               dm.query_produtos.ParamByName('custo').Value := editcusto;
              dm.query_produtos.ParamByName('lucro').Value := editLucro;
              dm.query_produtos.ParamByName('quantidade').Value := edtQuantidade.Text;

              edtValor.Text := '';
              end
                else
                  begin
                       dm.query_produtos.SQL.Add('UPDATE produtos set codigo = :codigo, nome = :nome, descricao = :descricao, estoque = :est, custo = :custo, margem_lucro = :lucro, quantidade = :quantidade,  valor = :valor where id = :id');
                     edtCusto.text := '0';
                     edtLucro.text := '0';
                     edtQuantidade.text := '0';
                     valordecimal := strToFloat(edtValor.Text);
                     dm.query_produtos.ParamByName('valor').Value := valordecimal;
                       dm.query_produtos.ParamByName('est').Value := edtEstoque.text;
                     dm.query_produtos.ParamByName('custo').Value := edtCusto.text;
                     dm.query_produtos.ParamByName('lucro').Value := edtLucro.text;
                     dm.query_produtos.ParamByName('quantidade').Value := edtQuantidade.text;
                  end;


                 dm.query_produtos.ParamByName('codigo').Value := EdtCodigo.Text;
           dm.query_produtos.ParamByName('nome').Value := edtNome.Text;
            dm.query_produtos.ParamByName('descricao').Value := edtDescricao.Text;
         end;



       dm.query_produtos.ParamByName('id').Value := id;
       dm.query_produtos.ExecSQL;


       listar;
       TFloatField(dm.query_produtos.FieldByName('margem_lucro')).displayFormat :=' #,,,,0%';
       MessageDlg('Editado com Sucesso!!', mtInformation, mbOKCancel, 0);
       btnEditar.Enabled := false;
       BtnExcluir.Enabled := false;
       limpar;
       desabilitarCampos;
    end;
end;

procedure TFrmProdutos.BtnExcluirClick(Sender: TObject);
begin
if MessageDlg('Deseja Excluir o registro?', mtConfirmation, [mbYes, mbNo], 0) = mrYes then
begin
     dm.query_produtos.Close;
     dm.query_produtos.SQL.Clear;
     dm.query_produtos.SQL.Add('DELETE FROM produtos where id = :id');
     dm.query_produtos.PARAMBYNAME('id').Value := id;
     dm.query_produtos.ExecSQL;
    MessageDlg('Deletado com Sucesso!!', mtInformation, mbOKCancel, 0);


     btnEditar.Enabled := false;
     BtnExcluir.Enabled := false;
     edtNome.Text := '';
     listar;
     TFloatField(dm.query_produtos.FieldByName('margem_lucro')).displayFormat :=' #,,,,0%';
end;
end;

procedure TFrmProdutos.btnGerarCodClick(Sender: TObject);
var
codigo : string;
begin
imgCod.picture:= nil;
GerarCodigo(EdtCodigo.Text, imgCod.Canvas);
BtnSalvar.enabled := true; //SO DEPOIS DE GERAR CODIGO QUE DEIXA SALVAR

      //Verificando se o cod do produto ja está cadastrado
      dm.query_produtos.Close;
      dm.query_produtos.SQL.Clear;
      dm.query_produtos.SQL.Add('Select * from produtos where codigo = ' + QuotedStr(Trim(EdtCodigo.Text)));
      dm.query_produtos.open;



        if not dm.query_produtos.IsEmpty then
          Begin
              codigo := dm.query_produtos['codigo'];
              MessageDlg('O codigo ' + codigo + ' já está cadastrado',mtInformation, mbOKCancel,0);
              EdtCodigo.Text := '';
              EdtCodigo.SetFocus;
              imgCod.picture:= nil;
              listar;
              exit;
          End;


listar;
end;

procedure TFrmProdutos.btnImprimirClick(Sender: TObject);
begin
FrmImprimirBarras := TFrmImprimirBarras.Create(self);
FrmImprimirBarras.ShowModal;
end;

procedure TFrmProdutos.btnNovoClick(Sender: TObject);
begin
  habilitarCampos;
  btnSalvar.Enabled := true;
  radioButton2.Checked := true;
  dm.tb_produtos.Insert;

  edtCodigo.SetFocus;
  limpar;
   imgCod.picture:= nil;

end;

procedure TFrmProdutos.btnSalvarClick(Sender: TObject);
var
codigo : string;
nome: string;
begin
      if Trim(EdtNome.Text) = '' then
       begin
           MessageDlg('Preencha o Nome!', mtInformation, mbOKCancel, 0);
           EdtNome.SetFocus;
           exit;
       end;

       if Trim(edtEstoque.Text) = '' then
       begin
           MessageDlg('Preencha o Estoque!', mtInformation, mbOKCancel, 0);
           edtEstoque.SetFocus;
           exit;
       end;

        if Trim(edtEstoqueMin.Text) = '' then
       begin
           MessageDlg('Preencha o Estoque!', mtInformation, mbOKCancel, 0);
           edtEstoqueMin.SetFocus;
           exit;
       end;
        if Trim(EdtCodigo.Text) = '' then
       begin
           MessageDlg('Preencha o Codigo!', mtInformation, mbOKCancel, 0);
           edtCodigo.SetFocus;
           exit;
       end;

            if Trim(edtValor.Text) = '' then
       begin
           MessageDlg('Preencha o Valor!', mtInformation, mbOKCancel, 0);
           EdtValor.SetFocus;
           exit;
       end;


         //Verificando se o cod do produto ja está cadastrado
      dm.query_produtos.Close;
      dm.query_produtos.SQL.Clear;
      dm.query_produtos.SQL.Add('Select * from produtos where codigo = ' + QuotedStr(Trim(EdtCodigo.Text)));
      dm.query_produtos.open;



        if not dm.query_produtos.IsEmpty then
          Begin
              codigo := dm.query_produtos['codigo'];
              MessageDlg('O codigo ' + codigo + ' já está cadastrado',mtInformation, mbOKCancel,0);
              EdtCodigo.Text := '';
              EdtCodigo.SetFocus;
              imgCod.picture:= nil;
              listar;
              exit;
          End;



      //Verificando se o nome do produto ja está cadastrado
      dm.query_produtos.Close;
      dm.query_produtos.SQL.Clear;
      dm.query_produtos.SQL.Add('Select * from produtos where nome = ' + QuotedStr(Trim(Edtnome.Text)));
      dm.query_produtos.open;



        if not dm.query_produtos.IsEmpty then
          Begin
              nome := dm.query_produtos['nome'];
              MessageDlg('O nome ' + nome + ' já está cadastrado',mtInformation, mbOKCancel,0);
              EdtCodigo.Text := '';
              EdtCodigo.SetFocus;
              imgCod.picture:= nil;
              listar;
              exit;
          End;



        if MessageDlg('Deseja salvar?', mtConfirmation, mbYesNo, 0) = mrYes then
        begin
          try
          associarCampos;
          salvarFoto;


          dm.tb_produtos.Post;
          MessageDlg('Salvo com Sucesso', mtInformation, mbOKCancel, 0);
          limpar;
          desabilitarCampos;
          btnSalvar.Enabled := false;
          listar;
          TFloatField(dm.query_produtos.FieldByName('margem_lucro')).displayFormat :=' #,,,,0%';

          except
          MessageDlg('Imagem grande demais', mtInformation, mbOKCancel, 0);
          dm.fd.Connected := true;
          dm.tb_produtos.Active := true;
          dm.tb_produtos.Insert;
          carregarImgPadrao;
          listar;
          end;
        end;

end;

procedure TFrmProdutos.buscarCodigo;
begin
dm.query_produtos.Close;
       dm.query_produtos.SQL.Clear;
       dm.query_produtos.SQL.Add('SELECT * from produtos where codigo LIKE :codigo order by nome asc');
       dm.query_produtos.ParamByName('codigo').Value := EdtBuscarCodigo.Text + '%';
       dm.query_produtos.Open;
end;

procedure TFrmProdutos.buscarNome;
begin
     dm.query_produtos.Close;
       dm.query_produtos.SQL.Clear;
       dm.query_produtos.SQL.Add('SELECT * from produtos where nome LIKE :nome order by nome asc');
       dm.query_produtos.ParamByName('nome').Value :=  '%' + EdtBuscarNome.Text + '%';
       dm.query_produtos.Open;
end;

procedure TFrmProdutos.carregarImgPadrao;
begin
   caminhoImg :=  GetCurrentDir + '\img\sem-foto.jpg';
   imagem.Picture.LoadFromFile(caminhoImg);
end;



{PROCEDIMENTO PADRÃO PARA RECUPERAR FOTO DO BANCO}
procedure ExibeFoto(DataSet : TDataSet; BlobFieldName : String; ImageExibicao :
TImage);

 var MemoryStream:TMemoryStream; jpg : TPicture;
 const
  OffsetMemoryStream : Int64 = 0;

begin
  if not(DataSet.IsEmpty) and
  not((DataSet.FieldByName(BlobFieldName) as TBlobField).IsNull) then
    try
      MemoryStream := TMemoryStream.Create;
      Jpg := TPicture.Create;
      (DataSet.FieldByName(BlobFieldName) as
TBlobField).SaveToStream(MemoryStream);
      MemoryStream.Position := OffsetMemoryStream;
      Jpg.LoadFromStream(MemoryStream);
      ImageExibicao.Picture.Assign(Jpg);
    finally
     // Jpg.Free;
      MemoryStream.Free;
    end
  else
    ImageExibicao.Picture := Nil;
end;



procedure TFrmProdutos.DBGrid1CellClick(Column: TColumn);
begin
  btnEditar.Enabled := true;
  btnExcluir.Enabled := true;
BtnSalvar.Enabled := false;
   BtnImprimir.Enabled := true;
  btnGerarCod.Enabled := false;
  habilitarCampos;


  dm.tb_produtos.Edit;


  edtNome.Text := dm.query_produtos.FieldByName('nome').Value;

  edtDescricao.Text := dm.query_produtos.FieldByName('descricao').Value;
   valor := dm.query_produtos.FieldByName('valor').Value;

   edtestoque.text := dm.query_produtos.FieldByName('estoque').Value ;
   edtestoquemin.Text := dm.query_produtos.FieldByName('estoque_min').Value;

    edtCusto.Text := dm.query_produtos.FieldByName('custo').Value;
     edtLucro.Text := dm.query_produtos.FieldByName('margem_lucro').Value;
      edtQuantidade.Text := dm.query_produtos.FieldByName('quantidade').Value;

    edtCodigo.Text := dm.query_produtos.FieldByName('codigo').Value;
    GerarCodigo(edtCodigo.Text, imgCod.Canvas);
  if edtCusto.Text <> '0' then
   begin
     RadioButton1.Checked := true;
      edtValor.Enabled := false;
          if radioButton1.Checked = true then
            begin
             edtValor.Text := formatFloat('R$,,,,#0.00',dm.query_produtos.FieldByName('valor').Value);
            end
              else
                begin
                 edtValor.Text := dm.query_produtos.FieldByName('valor').Value;
                end;


   end
     else
       begin


          RadioButton2.Checked := true;
          if radioButton2.Checked = true then
                begin
                 edtValor.Text := dm.query_produtos.FieldByName('valor').Value;
                end;

           valor := dm.query_produtos.FieldByName('valor').Value;
       end;
  id := dm.query_produtos.FieldByName('id').Value;
  codigoProduto := dm.query_produtos.FieldByName('codigo').Value;

  if dm.query_produtos.FieldByName('imagem').Value <> null then
  ExibeFoto(dm.query_produtos, 'imagem', imagem);



end;

procedure TFrmProdutos.DBGrid1DblClick(Sender: TObject);
begin
if chamada = 'Prod' then
begin
  idProduto := dm.query_produtos.FieldByName('id').Value;
  nomeProduto := dm.query_produtos.FieldByName('nome').Value;
  estoqueProduto := dm.query_produtos.FieldByName('estoque').Value;
  Close;
  chamada := '';
end;
end;

procedure TFrmProdutos.desabilitarCampos;
begin
 edtNome.Enabled := false;
  edtDescricao.Enabled := false;
  edtCodigo.Enabled := false;
  edtValor.Enabled := false;
  btnAdd.Enabled := false;
  btnGerarCod.Enabled;
  imgCod.Visible := false;
  edtEstoque.Enabled := false;
  edtEstoqueMin.Enabled := false;
end;

procedure TFrmProdutos.EdtBuscarCodigoChange(Sender: TObject);
begin
buscarCodigo;
end;

procedure TFrmProdutos.EdtBuscarNomeChange(Sender: TObject);
begin
buscarNome;
end;

procedure TFrmProdutos.edtCodigoChange(Sender: TObject);
begin
if Trim(EdtCodigo.Text) <> '' then
  begin
    BtnGerarCod.Enabled := true;
  end
  else
  begin
    BtnGerarCod.Enabled := false;
  end;


end;

procedure TFrmProdutos.edtCustoChange(Sender: TObject);
var
dividir: double;
begin
dividir := 100;


  //edtlucro.Text := formatFloat(' #,,,, 0.00 %' , zerado);
if (edtCusto.text <> '') then
begin
custo := strToFloat(edtCusto.Text);
end;

if (edtCusto.Text <> '0') and (edtCusto.text <> '') then
  begin
   if (edtLucro.Text <> '0') and (edtLucro.text <> '') then
      begin
         if (edtquantidade.Text <> '') then
          begin
            resultado := ((lucro * custo / dividir) + custo) * quantidade;
            edtValor.Text := formatFloat('R$ #,,,,0.00', resultado);
            valor := resultado;
          end;
      end;
  end;

end;

procedure TFrmProdutos.edtLucroChange(Sender: TObject);
var
dividir: double;

begin

dividir := 100;
if (edtLucro.text <> '') then
begin
lucro := strToFloat(edtLucro.Text);

end;

  if (edtLucro.Text <> '') and (edtLucro.text <> '0') then
   begin
       if (edtCusto.Text <> '0') and (edtCusto.text <> '') then

      begin
         if (edtquantidade.Text <> '') then
            begin
              resultado := ((lucro * custo / dividir) + custo) * quantidade;
              edtValor.Text := formatFloat('R$ #,,,,0.00', resultado);
               valor := resultado;

            end;
               if (edtquantidade.Text = '') then
               begin
                edtQuantidade.Text := '1';
               end;
      end;
    end;
end;

procedure TFrmProdutos.edtQuantidadeChange(Sender: TObject);
var
dividir: double;

begin

dividir := 100;
if (edtquantidade.Text <> '') then
begin
quantidade := strToFloat(edtquantidade.Text);
end;
if (edtCusto.Text <> '') and (edtCusto.text <> '0') then
    begin
      if (edtLucro.Text <> '0') and (edtLucro.text <> '') then
        begin
          if (edtquantidade.Text <> '') then
          begin
           resultado := ((lucro * custo / dividir) + custo) * quantidade;
            edtValor.Text := formatFloat('R$ #,,,,0.00', resultado);
             valor := resultado;
          end
           else
            begin

            end;
        end;
    end;
end;

procedure TFrmProdutos.edtValorChange(Sender: TObject);
begin
if (edtCusto.Text <> '0') and (edtCusto.text <> '') then
    begin
      if (edtLucro.Text <> '0') and (edtLucro.text <> '') then
        begin
           if (edtquantidade.Text <> '') then
            begin
            if radioButton1.Checked = true then
            begin
            edtValor.Text := formatFloat('R$ #,,,,0.00', resultado);
            end
              else
                begin
                 edtValor.Text := FloatToStr(resultado);
                end;
             valor := resultado;
            end;
        end;
    end;
end;


procedure TFrmProdutos.FormActivate(Sender: TObject);
var
dividir: double;
begin
dividir := 100;
//resultado :=  custo + lucro / dividir * quantidade;

if (edtCusto.Text <> '') and (edtCusto.text <> '0') then
  begin
   if (edtLucro.Text <> '0') and (edtLucro.text <> '') then
      begin
         if (edtquantidade.Text <> '') then
          begin
            resultado := ((lucro * custo / dividir) + custo) * quantidade;
            edtValor.Text := formatFloat('R$ #,,,,0.00', resultado);
          end;
      end;
  end;
end;

procedure TFrmProdutos.FormShow(Sender: TObject);
begin
 LB1.VISIBLE := FALSE;
 LB2.VISIBLE := FALSE;
 LB3.VISIBLE := FALSE;
 edtcusto.visible := false;
 edtLucro.visible := false;
 edtquantidade.visible := false;
  carregarImgPadrao;
  desabilitarCampos;
  dm.tb_produtos.Active := true;
  listar;

  rbNome.Checked := true;
  edtBuscarCodigo.Visible := false;
  dialog.Filename := GetCurrentDir + '\img\sem-foto.jpg';
  TFloatField(dm.query_produtos.FieldByName('margem_lucro')).displayFormat :=' #,,,,0%';
                 // ExtractFileDir(GetCurrentDir) + '\Debug\img\sem-foto.jpg';
end;

procedure TFrmProdutos.GerarCodigo(codigo: string; Canvas: TCanvas);
const

digitos : array['0'..'9'] of string[5]= ('00110', '10001', '01001', '11000',
'00101', '10100', '01100', '00011', '10010', '01010');
var s : string;
i, j, x, t : Integer;
begin


try

// Gerar o valor para desenhar o código de barras
// Caracter de início
s := '0000';
for i := 1 to length(codigo) div 2 do
for j := 1 to 5 do
s := s + Copy(Digitos[codigo[i * 2 - 1]], j, 1) + Copy(Digitos[codigo[i * 2]], j, 1);
// Caracter de fim
s := s + '100';
// Desenhar em um objeto canvas
// Configurar os parâmetros iniciais
x := 0;
// Pintar o fundo do código de branco
Canvas.Brush.Color := clWhite;
Canvas.Pen.Color := clWhite;
Canvas.Rectangle(0,0, 500, 50);
// Definir as cores da caneta
Canvas.Brush.Color := clBlack;
Canvas.Pen.Color := clBlack;
// Escrever o código de barras no canvas
for i := 1 to length(s) do
begin
// Definir a espessura da barra
t := strToInt(s[i]) * 2 + 1;
// Imprimir apenas barra sim barra não (preto/branco - intercalado);
if i mod 2 = 1 then
Canvas.Rectangle(x, 0, x + t, 50);
// Passar para a próxima barra
x := x + t;
end;

 except
        MessageDlg('Preencha todo o código!!', mtInformation, mbOKCancel, 0);
        dm.fd.Connected := true;
        dm.tb_produtos.Active := true;
        dm.tb_produtos.Insert;
        listar;
        end;
end;

procedure TFrmProdutos.habilitarCampos;
begin
 edtNome.Enabled := true;
  edtDescricao.Enabled := true;
  edtCodigo.Enabled := true;
  edtValor.Enabled := true;
  edtEstoque.Enabled := true;
  edtEstoqueMin.Enabled := true;
  edtCusto.Enabled := true;
  edtLucro. Enabled := true;
  edtQuantidade.Enabled := true;
  btnAdd.Enabled := true;
  imgCod.Visible := true;
end;

procedure TFrmProdutos.limpar;
begin
 edtNome.Text := '';
  edtDescricao.Text := '';
  edtCodigo.Text := '';
  edtEstoque.Text := '';
  edtValor.Text := '';
  edtQuantidade.Text := '';
  edtCusto.Text := '';
  edtLucro.Text := '';
  edtEstoqueMin.Text := '';
  carregarImgPadrao;

end;

procedure TFrmProdutos.listar;
begin
        dm.query_produtos.Close;
       dm.query_produtos.SQL.Clear;
       dm.query_produtos.SQL.Add('SELECT * from produtos order by nome asc');
       dm.query_produtos.Open;
end;


procedure TFrmProdutos.RadioButton1Click(Sender: TObject);
begin
LB1.VISIBLE := true;
 LB2.VISIBLE := true;
 LB3.VISIBLE := true;
 edtcusto.visible := true;
 edtLucro.visible := true;
 edtquantidade.visible := true;
 edtcusto.enabled := true;
 edtLucro.enabled := true;
 edtquantidade.enabled := true;
 edtValor.enabled := false;
 radioButton2.Enabled := true;
end;

procedure TFrmProdutos.RadioButton2Click(Sender: TObject);
begin
LB1.VISIBLE := false;
 LB2.VISIBLE := FALSE;
 LB3.VISIBLE := FALSE;
 edtcusto.visible := false;
 edtLucro.visible := false;
 edtquantidade.visible := false;
  edtcusto.enabled := false;
 edtLucro.enabled := false;
 edtquantidade.enabled := false;
  edtcusto.text := '';
 edtLucro.text := '';
 edtquantidade.text := '';
 edtValor.enabled := true;
 edtValor.Text := '';
 radioButton2.Enabled := false;
end;

procedure TFrmProdutos.rbCPFClick(Sender: TObject);
begin
listar;
edtBuscarcodigo.Visible := true;
edtBuscarNome.Visible := false;
edtBuscarCodigo.SetFocus;
end;

procedure TFrmProdutos.rbNomeClick(Sender: TObject);
begin
listar;
edtBuscarCodigo.Visible := false;
edtBuscarNome.Visible := true;
edtBuscarNome.SetFocus;
end;

procedure TFrmProdutos.salvarFoto;
begin
if dialog.FileName <> '' then
begin

  img := TPicture.Create;
  img.LoadFromFile(dialog.Filename);
  dm.tb_produtos.FieldByName('imagem').Assign(img);
  img.Free;
  dialog.Filename := GetCurrentDir + '\img\sem-foto.jpg';
  //ExtractFileDir(GetCurrentDir) + '\Debug\img\sem-foto.jpg';
  alterou := false;

end
else
begin
 dm.tb_produtos.FieldByName('imagem').Value :=  GetCurrentDir + '\img\sem-foto.jpg';
 //ExtractFileDir(GetCurrentDir) + '\Debug\img\sem-foto.jpg';

end;

end;








end.
